name: CI/CD to EC2

on:
  push:
    branches:
      - develop

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 자바 설치
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Gradle 캐싱
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Resource 폴더 생성
        run: mkdir -p ./src/main/resources/

      - name: properties 생성
        run: echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./src/main/resources/application.properties

      - name: 테스트 없는 Build
        run: ./gradlew build -x test
        
      - name: Docker 로그인
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

     
      - name: Docker 이미지 빌드
        run: docker build -t ${{ secrets.DOCKER_USERNAME}}/${{ secrets.PROJECT_NAME }} .
        
      - name: DockerHub 푸쉬
        run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.PROJECT_NAME }}

    
      - name: 메인서버 배포
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST  }}
          username: ${{ secrets.EC2_USER  }}
          key: ${{ secrets.SSH_PRIVATE_KEY  }}
          script: |
            sudo docker rmi ${{ secrets.DOCKER_USERNAME }}/${{ secrets.PROJECT_NAME }}:old_version || true
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.PROJECT_NAME }}
            sudo docker run -d -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/${{ secrets.PROJECT_NAME }}

  
